name: Build/Test/Deploy

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+.[0-9]+
  pull_request:
      
jobs:
  run-scripts:
    runs-on: ubuntu-latest
    strategy:
      # Don't cancel the remaining running jobs if some job(s) fail(s)
      fail-fast: false
      matrix:
        image: ['centos:centos7', 'rockylinux:8', 'quay.io/centos/centos:stream8']
        components: ['udt,myproxy,ssh', 'gram5']
        # Ignore UDT for the CentOS Stream 9 case because libnice is not available there yet
        include:
          - image: 'quay.io/centos/centos:stream9'
            components: 'myproxy,ssh'
          - image: 'quay.io/centos/centos:stream9'
            components: 'gram5'
          - image: 'rockylinux:9'
            components: 'myproxy,ssh'
          - image: 'rockylinux:9'
            components: 'gram5'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
    
      - name: build/test on ${{ matrix.image }} with ${{ matrix.components }}
        env:
          IMAGE: ${{ matrix.image }} 
          TASK: tests
          COMPONENTS: ${{ matrix.components }} 
        run: travis-ci/setup_tasks.sh
        
      - name: build source tarballs and srpms
        # Run this step for all OS cases but for only one component selection each,
        # it still builds **all** source tarballs and SRPMs
        if: |
          contains(matrix.components , 'gram5')
        env:
          IMAGE: ${{ matrix.image }}
          TASK: srpms
        run: travis-ci/setup_tasks.sh
      
      # SSH key recipe from https://www.webfactory.de/blog/use-ssh-key-for-private-repositories-in-github-actions
      - name: Establish ssh and upload source tarballs
        # Only run this step for the centos:centos7 case and
        # for only one component selection (must be the same as for the previous step!) and
        # only when a tag was created
        if: |
          contains(matrix.image , 'centos:centos7') &&
          contains(matrix.components , 'gram5') &&
          contains(github.ref , 'refs/tags/')
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a "$SSH_AUTH_SOCK" > /dev/null
          ssh-add - <<< "${{ secrets.ID_GRIDCF_UPLOADER }}"
          travis-ci/upload_source_tarballs.sh ${{ github.repository_owner }}
